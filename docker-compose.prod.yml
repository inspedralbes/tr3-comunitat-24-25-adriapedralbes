services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json:rw
      - ./traefik/config:/etc/traefik/dynamic
    networks:
      - web
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=web"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.leresolver.acme.email=talkcompiler@gmail.com"
      - "--certificatesresolvers.leresolver.acme.storage=/acme.json"
      - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"

  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: nextjs-app
    restart: always
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.futurprive.com
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`futurprive.com`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=leresolver"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"

  postgres:
    image: postgres:14-alpine
    container_name: postgres-db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env.prod
    networks:
      - web

  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: django-app
    restart: always
    command: >-
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python create_superuser.py && 
             gunicorn --workers=3 --timeout=120 --bind 0.0.0.0:8000 config.wsgi:application"
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_HOST=postgres
      # Forzar la creaci√≥n del superusuario sin sobrescribir credenciales
      - FORCE_SUPERUSER_CREATE=true
    networks:
      - web
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`api.futurprive.com`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls.certresolver=leresolver"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.django-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.django-http.entrypoints=web"
      - "traefik.http.routers.django-http.rule=Host(`api.futurprive.com`)"
      - "traefik.http.routers.django-http.middlewares=django-https-redirect"
      - "traefik.http.middlewares.django-compress.compress=true"
      - "traefik.http.routers.django.middlewares=django-compress"
      - "traefik.http.middlewares.django-static.stripprefix.prefixes=/static"
      - "traefik.http.middlewares.django-static.stripprefix.forceSlash=false"

  adminer:
    image: adminer:latest
    container_name: adminer-prod
    restart: always
    depends_on:
      - postgres
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.futurprive.com`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=leresolver"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=pepa-linha

networks:
  web:

volumes:
  postgres_data:
  static_data:
  media_data: